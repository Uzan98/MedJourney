Build Error
Failed to compile

Next.js (14.2.28) is outdated (learn more)
./src/app/genomed-bank/page.tsx
Error: 
  × await isn't allowed in non-async function
     ╭─[C:\Users\u-zan\Downloads\APLICATIVOS\medjourney\medjourney-app\src\app\genomed-bank\page.tsx:287:1]
 287 │       setLoading(prev => ({ ...prev, disciplines: true }));
 288 │       setError(null);
 289 │       
 290 │       const { data, error } = await supabase
     ·                                     ────────
 291 │         .from('disciplines')
 292 │         .select('id, name, description')
 292 │         .eq('user_id', SYSTEM_USER_ID)
     ╰────

  × await isn't allowed in non-async function
     ╭─[C:\Users\u-zan\Downloads\APLICATIVOS\medjourney\medjourney-app\src\app\genomed-bank\page.tsx:302:1]
 302 │       if (data) {
 303 │         const counts: Record<number, number> = {};
 304 │         for (const discipline of data) {
 305 │           counts[discipline.id] = await getQuestionCount('discipline', discipline.id);
     ·                                         ────────────────
 306 │         }
 307 │         setQuestionCounts(prev => ({ ...prev, disciplines: counts }));
 307 │       }
     ╰────

  × Return statement is not allowed here
      ╭─[C:\Users\u-zan\Downloads\APLICATIVOS\medjourney\medjourney-app\src\app\genomed-bank\page.tsx:927:1]
  927 │       );
  928 │     };
  929 │     
  930 │ ╭─▶   return (
  931 │ │       <div className="container mx-auto p-6 space-y-6">
  932 │ │         {/* Header */}
  933 │ │         <div className="flex items-center justify-between">
  934 │ │           <div>
  935 │ │             <h1 className="text-3xl font-bold text-gray-900">Genomed Bank</h1>
  936 │ │             <p className="text-gray-600 mt-2">Banco de questões de medicina com filtros avançados</p>
  937 │ │           </div>
  938 │ │           <div className="flex items-center space-x-2">
  939 │ │             <BookOpen className="h-8 w-8 text-blue-600" />
  940 │ │           </div>
  941 │ │         </div>
  942 │ │   
  943 │ │         {/* Busca Hierárquica */}
  944 │ │         <Card>
  945 │ │           <CardHeader>
  946 │ │             <CardTitle className="flex items-center space-x-2">
  947 │ │               <Search className="h-5 w-5" />
  948 │ │               <span>Busca Hierárquica</span>
  949 │ │             </CardTitle>
  950 │ │           </CardHeader>
  951 │ │           <CardContent>
  952 │ │             <div className="space-y-4">
  953 │ │               <div className="relative">
  954 │ │                 <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400" />
  955 │ │                 <Input
  956 │ │                   type="text"
  957 │ │                   placeholder="Digite uma palavra-chave para buscar em disciplinas, assuntos ou tópicos... (mín. 2 caracteres)"
  958 │ │                   value={searchTerm}
  959 │ │                   onChange={(e) => setSearchTerm(e.target.value)}
  960 │ │                   className="pl-10 pr-10"
  961 │ │                 />
  962 │ │                 {isSearching && (
  963 │ │                   <div className="absolute right-3 top-1/2 transform -translate-y-1/2">
  964 │ │                     <Loader2 className="h-4 w-4 animate-spin text-gray-400" />
  965 │ │                   </div>
  966 │ │                 )}
  967 │ │               </div>
  968 │ │               
  969 │ │               {isSearching && (
  970 │ │                 <div className="flex items-center space-x-2 text-sm text-gray-500">
  971 │ │                   <Loader2 className="h-4 w-4 animate-spin" />
  972 │ │                   <span>Buscando...</span>
  973 │ │                 </div>
  974 │ │               )}
  975 │ │               
  976 │ │               {searchTerm && (
  977 │ │                 <div className="mt-4">
  978 │ │                   {searchTerm.length < 2 ? (
  979 │ │                     <div className="text-sm text-gray-400 text-center py-4">
  980 │ │                       Digite pelo menos 2 caracteres para buscar
  981 │ │                     </div>
  982 │ │                   ) : isSearching ? (
  983 │ │                     <div className="flex items-center justify-center py-8">
  984 │ │                       <div className="flex flex-col items-center space-y-3">
  985 │ │                         <Loader2 className="h-8 w-8 animate-spin text-blue-500" />
  986 │ │                         <div className="flex items-center space-x-2">
  987 │ │                           <div className="w-2 h-2 bg-blue-500 rounded-full animate-bounce" style={{animationDelay: '0ms'}}></div>
  988 │ │                           <div className="w-2 h-2 bg-blue-500 rounded-full animate-bounce" style={{animationDelay: '150ms'}}></div>
  989 │ │                           <div className="w-2 h-2 bg-blue-500 rounded-full animate-bounce" style={{animationDelay: '300ms'}}></div>
  990 │ │                         </div>
  991 │ │                         <span className="text-sm text-gray-600 font-medium">Buscando resultados...</span>
  992 │ │                       </div>
  993 │ │                     </div>
  994 │ │                   ) : treeData.length > 0 ? (
  995 │ │                     <div className="space-y-2 no-flicker">
  996 │ │                       <h4 className="font-medium text-gray-700">Resultados encontrados ({searchResults.length}):</h4>
  997 │ │                       <div className="border rounded-lg p-4 bg-gray-50 max-h-96 overflow-y-auto">
  998 │ │                         <TreeView nodes={treeData} onToggle={toggleTreeNode} />
  999 │ │                       </div>
 1000 │ │                     </div>
 1001 │ │                   ) : hasSearched ? (
 1002 │ │                     <div className="text-center py-8">
 1003 │ │                       <div className="flex flex-col items-center space-y-3">
 1004 │ │                         <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center">
 1005 │ │                           <Search className="h-8 w-8 text-gray-400" />
 1006 │ │                         </div>
 1007 │ │                         <div className="text-sm text-gray-500">
 1008 │ │                           Nenhum resultado encontrado para <span className="font-medium">"{searchTerm}"</span>
 1009 │ │                         </div>
 1010 │ │                         <div className="text-xs text-gray-400">
 1011 │ │                           Tente usar termos diferentes ou verifique a ortografia
 1012 │ │                         </div>
 1013 │ │                       </div>
 1014 │ │                     </div>
 1015 │ │                   ) : null}
 1016 │ │                 </div>
 1017 │ │               )}
 1018 │ │             </div>
 1019 │ │           </CardContent>
 1020 │ │         </Card>
 1021 │ │   
 1022 │ │         {/* Filtros */}
 1023 │ │         <Card>
 1024 │ │           <CardHeader>
 1025 │ │             <CardTitle className="flex items-center space-x-2">
 1026 │ │               <Filter className="h-5 w-5" />
 1027 │ │               <span>Filtros</span>
 1028 │ │             </CardTitle>
 1029 │ │           </CardHeader>
 1030 │ │           <CardContent>
 1031 │ │             <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
 1032 │ │               {/* Disciplinas */}
 1033 │ │               <div className="space-y-2">
 1034 │ │                 <label className="text-sm font-medium text-gray-700">Disciplina</label>
 1035 │ │                 <Select value={selectedDiscipline} onValueChange={setSelectedDiscipline}>
 1036 │ │                   <SelectTrigger>
 1037 │ │                     <SelectValue placeholder="Selecione uma disciplina" />
 1038 │ │                   </SelectTrigger>
 1039 │ │                   <SelectContent>
 1040 │ │                     {disciplines.map((discipline) => (
 1041 │ │                       <SelectItem key={discipline.id} value={discipline.id.toString()}>
 1042 │ │                         <div className="flex justify-between items-center w-full">
 1043 │ │                           <span>{discipline.name}</span>
 1044 │ │                           <Badge variant="secondary" className="ml-2">
 1045 │ │                             {questionCounts.disciplines[discipline.id] || 0}
 1046 │ │                           </Badge>
 1047 │ │                         </div>
 1048 │ │                       </SelectItem>
 1049 │ │                     ))}
 1050 │ │                   </SelectContent>
 1051 │ │                 </Select>
 1052 │ │                 {loading.disciplines && (
 1053 │ │                   <div className="flex items-center space-x-2 text-sm text-gray-500">
 1054 │ │                     <Loader2 className="h-4 w-4 animate-spin" />
 1055 │ │                     <span>Carregando disciplinas...</span>
 1056 │ │                   </div>
 1057 │ │                 )}
 1058 │ │               </div>
 1059 │ │   
 1060 │ │               {/* Assuntos */}
 1061 │ │               <div className="space-y-2">
 1062 │ │                 <label className="text-sm font-medium text-gray-700">Assunto</label>
 1063 │ │                 <Select 
 1064 │ │                   value={selectedSubject} 
 1065 │ │                   onValueChange={setSelectedSubject}
 1066 │ │                   disabled={!selectedDiscipline || loading.subjects}
 1067 │ │                 >
 1068 │ │                   <SelectTrigger>
 1069 │ │                     <SelectValue placeholder="Selecione um assunto" />
 1070 │ │                   </SelectTrigger>
 1071 │ │                   <SelectContent>
 1072 │ │                     {subjects.map((subject) => (
 1073 │ │                       <SelectItem key={subject.id} value={subject.id.toString()}>
 1074 │ │                         <div className="flex justify-between items-center w-full">
 1075 │ │                           <span>{subject.title || subject.name}</span>
 1076 │ │                           <Badge variant="secondary" className="ml-2">
 1077 │ │                             {questionCounts.subjects[subject.id] || 0}
 1078 │ │                           </Badge>
 1079 │ │                         </div>
 1080 │ │                       </SelectItem>
 1081 │ │                     ))}
 1082 │ │                   </SelectContent>
 1083 │ │                 </Select>
 1084 │ │                 {loading.subjects && (
 1085 │ │                   <div className="flex items-center space-x-2 text-sm text-gray-500">
 1086 │ │                     <Loader2 className="h-4 w-4 animate-spin" />
 1087 │ │                     <span>Carregando assuntos...</span>
 1088 │ │                   </div>
 1089 │ │                 )}
 1090 │ │               </div>
 1091 │ │   
 1092 │ │               {/* Tópicos */}
 1093 │ │               <div className="space-y-2">
 1094 │ │                 <label className="text-sm font-medium text-gray-700">Tópico</label>
 1095 │ │                 <Select 
 1096 │ │                   value={selectedTopic} 
 1097 │ │                   onValueChange={setSelectedTopic}
 1098 │ │                   disabled={!selectedSubject || loading.topics}
 1099 │ │                 >
 1100 │ │                   <SelectTrigger>
 1101 │ │                     <SelectValue placeholder="Selecione um tópico" />
 1102 │ │                   </SelectTrigger>
 1103 │ │                   <SelectContent>
 1104 │ │                     {topics.map((topic) => (
 1105 │ │                       <SelectItem key={topic.id} value={topic.id.toString()}>
 1106 │ │                         <div className="flex justify-between items-center w-full">
 1107 │ │                           <span>{topic.name}</span>
 1108 │ │                           <Badge variant="secondary" className="ml-2">
 1109 │ │                             {questionCounts.topics[topic.id] || 0}
 1110 │ │                           </Badge>
 1111 │ │                         </div>
 1112 │ │                       </SelectItem>
 1113 │ │                     ))}
 1114 │ │                   </SelectContent>
 1115 │ │                 </Select>
 1116 │ │                 {loading.topics && (
 1117 │ │                   <div className="flex items-center space-x-2 text-sm text-gray-500">
 1118 │ │                     <Loader2 className="h-4 w-4 animate-spin" />
 1119 │ │                     <span>Carregando tópicos...</span>
 1120 │ │                   </div>
 1121 │ │                 )}
 1122 │ │               </div>
 1123 │ │             </div>
 1124 │ │   
 1125 │ │             {/* Botão para limpar filtros */}
 1126 │ │             {(selectedDiscipline || selectedSubject || selectedTopic) && (
 1127 │ │               <div className="mt-4">
 1128 │ │                 <Button variant="outline" onClick={clearFilters}>
 1129 │ │                   Limpar Filtros
 1130 │ │                 </Button>
 1131 │ │               </div>
 1132 │ │             )}
 1133 │ │           </CardContent>
 1134 │ │         </Card>
 1135 │ │   
 1136 │ │         {/* Mensagem de erro */}
 1137 │ │         {error && (
 1138 │ │           <Card className="border-0 shadow-lg overflow-hidden transition-all duration-200 animate-scaleIn">
 1139 │ │             <div className="bg-gradient-to-r from-red-500 to-red-600 h-2" />
 1140 │ │             <CardContent className="pt-6 bg-red-50">
 1141 │ │               <div className="flex items-start space-x-3">
 1142 │ │                 <div className="bg-red-100 p-2 rounded-full mt-0.5 animate-pulse">
 1143 │ │                   <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-red-600" viewBox="0 0 20 20" fill="currentColor">
 1144 │ │                     <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
 1145 │ │                   </svg>
 1146 │ │                 </div>
 1147 │ │                 <div>
 1148 │ │                   <h4 className="font-semibold text-red-800 mb-1">Erro</h4>
 1149 │ │                   <p className="text-red-700">{error}</p>
 1150 │ │                 </div>
 1151 │ │               </div>
 1152 │ │             </CardContent>
 1153 │ │           </Card>
 1154 │ │         )}
 1155 │ │   
 1156 │ │         {/* Estatísticas */}
 1157 │ │         {(disciplines.length > 0 || subjects.length > 0 || topics.length > 0) && (
 1158 │ │           <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
 1159 │ │             <Card className="overflow-hidden border-0 shadow-lg transition-all duration-200 hover:shadow-xl animate-slideUp">
 1160 │ │               <div className="bg-gradient-to-r from-blue-500 to-blue-600 h-2" />
 1161 │ │               <CardContent className="pt-6 px-4 sm:px-6">
 1162 │ │                 <div className="flex items-center space-x-4">
 1163 │ │                   <div className="bg-blue-100 p-2 sm:p-3 rounded-full animate-pulse">
 1164 │ │                     <BookOpen className="h-5 w-5 sm:h-6 sm:w-6 text-blue-600" />
 1165 │ │                   </div>
 1166 │ │                   <div>
 1167 │ │                     <p className="text-2xl sm:text-3xl font-bold text-blue-600">{disciplines.length}</p>
 1168 │ │                     <p className="text-xs sm:text-sm font-medium text-gray-600">Disciplinas</p>
 1169 │ │                   </div>
 1170 │ │                 </div>
 1171 │ │               </CardContent>
 1172 │ │             </Card>
 1173 │ │             
 1174 │ │             <Card className="overflow-hidden border-0 shadow-lg transition-all duration-200 hover:shadow-xl animate-slideUp" style={{animationDelay: '0.1s'}}>
 1175 │ │               <div className="bg-gradient-to-r from-green-500 to-green-600 h-2" />
 1176 │ │               <CardContent className="pt-6 px-4 sm:px-6">
 1177 │ │                 <div className="flex items-center space-x-4">
 1178 │ │                   <div className="bg-green-100 p-2 sm:p-3 rounded-full animate-pulse">
 1179 │ │                     <FileText className="h-5 w-5 sm:h-6 sm:w-6 text-green-600" />
 1180 │ │                   </div>
 1181 │ │                   <div>
 1182 │ │                     <p className="text-2xl sm:text-3xl font-bold text-green-600">{subjects.length}</p>
 1183 │ │                     <p className="text-xs sm:text-sm font-medium text-gray-600">Assuntos</p>
 1184 │ │                   </div>
 1185 │ │                 </div>
 1186 │ │               </CardContent>
 1187 │ │             </Card>
 1188 │ │             
 1189 │ │             <Card className="overflow-hidden border-0 shadow-lg transition-all duration-200 hover:shadow-xl animate-slideUp" style={{animationDelay: '0.2s'}}>
 1190 │ │               <div className="bg-gradient-to-r from-purple-500 to-purple-600 h-2" />
 1191 │ │               <CardContent className="pt-6 px-4 sm:px-6">
 1192 │ │                 <div className="flex items-center space-x-4">
 1193 │ │                   <div className="bg-purple-100 p-2 sm:p-3 rounded-full animate-pulse">
 1194 │ │                     <Target className="h-5 w-5 sm:h-6 sm:w-6 text-purple-600" />
 1195 │ │                   </div>
 1196 │ │                   <div>
 1197 │ │                     <p className="text-2xl sm:text-3xl font-bold text-purple-600">{topics.length}</p>
 1198 │ │                     <p className="text-xs sm:text-sm font-medium text-gray-600">Tópicos</p>
 1199 │ │                   </div>
 1200 │ │                 </div>
 1201 │ │               </CardContent>
 1202 │ │             </Card>
 1203 │ │             
 1204 │ │             <Card className="overflow-hidden border-0 shadow-lg transition-all duration-200 hover:shadow-xl animate-slideUp" style={{animationDelay: '0.3s'}}>
 1205 │ │               <div className="bg-gradient-to-r from-orange-500 to-orange-600 h-2" />
 1206 │ │               <CardContent className="pt-6 px-4 sm:px-6">
 1207 │ │                 <div className="flex items-center space-x-4">
 1208 │ │                   <div className="bg-orange-100 p-2 sm:p-3 rounded-full animate-pulse">
 1209 │ │                     <FileText className="h-5 w-5 sm:h-6 sm:w-6 text-orange-600" />
 1210 │ │                   </div>
 1211 │ │                   <div>
 1212 │ │                     <p className="text-2xl sm:text-3xl font-bold text-orange-600">{questions.length}</p>
 1213 │ │                     <p className="text-xs sm:text-sm font-medium text-gray-600">Questões</p>
 1214 │ │                   </div>
 1215 │ │                 </div>
 1216 │ │               </CardContent>
 1217 │ │             </Card>
 1218 │ │           </div>
 1219 │ │         )}
 1220 │ │   
 1221 │ │         {/* Lista de questões */}
 1222 │ │         {questions.length > 0 && (
 1223 │ │           <Card className="border-0 shadow-lg overflow-hidden animate-fadeIn">
 1224 │ │             <div className="bg-gradient-to-r from-blue-500 to-blue-600 h-2" />
 1225 │ │             <CardHeader className="bg-blue-50 border-b border-blue-100 px-4 sm:px-6">
 1226 │ │               <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
 1227 │ │                 <CardTitle className="text-blue-800 flex items-center gap-2 text-base sm:text-lg">
 1228 │ │                   <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4 sm:h-5 sm:w-5" viewBox="0 0 20 20" fill="currentColor">
 1229 │ │                     <path d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z" />
 1230 │ │                     <path fillRule="evenodd" d="M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z" clipRule="evenodd" />
 1231 │ │                   </svg>
 1232 │ │                   Questões Encontradas ({questions.length})
 1233 │ │                 </CardTitle>
 1234 │ │                 
 1235 │ │                 <div className="flex items-center gap-2 text-sm">
 1236 │ │                   <span className="text-gray-600">
 1237 │ │                     {selectedQuestions.size} selecionada{selectedQuestions.size !== 1 ? 's' : ''}
 1238 │ │                   </span>
 1239 │ │                   <Button
 1240 │ │                     variant="outline"
 1241 │ │                     size="sm"
 1242 │ │                     onClick={selectedQuestions.size === questions.length ? deselectAllQuestions : selectAllQuestions}
 1243 │ │                     className="text-xs"
 1244 │ │                   >
 1245 │ │                     {selectedQuestions.size === questions.length ? 'Desmarcar Todas' : 'Selecionar Todas'}
 1246 │ │                   </Button>
 1247 │ │                   {selectedQuestions.size > 0 && (
 1248 │ │                     <Button
 1249 │ │                       size="sm"
 1250 │ │                       onClick={createExamFromSelectedQuestions}
 1251 │ │                       className="bg-blue-600 hover:bg-blue-700 text-white text-xs"
 1252 │ │                     >
 1253 │ │                       <Plus className="h-3 w-3 mr-1" />
 1254 │ │                       Criar Simulado
 1255 │ │                     </Button>
 1256 │ │                   )}
 1257 │ │                 </div>
 1258 │ │               </div>
 1259 │ │             </CardHeader>
 1260 │ │             <CardContent className="p-4 sm:p-6">
 1261 │ │               <div className="space-y-4 transition-all duration-300 ease-in-out no-flicker animate-smoothTransition">
 1262 │ │                 {questions.map((question, index) => (
 1263 │ │                   <Card 
 1264 │ │                     key={question.id} 
 1265 │ │                     className="border-0 shadow-md hover:shadow-lg transition-all duration-200 overflow-hidden animate-slideUp" 
 1266 │ │                     style={{animationDelay: `${Math.min(index * 0.1, 1)}s`}}
 1267 │ │                   >
 1268 │ │                     <div className={`bg-gradient-to-r h-1 transition-all duration-200 ${
 1269 │ │                       selectedQuestions.has(question.id) 
 1270 │ │                         ? 'from-green-400 to-green-500' 
 1271 │ │                         : 'from-blue-400 to-blue-500'
 1272 │ │                     }`} />
 1273 │ │                     <CardContent className="pt-4 sm:pt-6 px-4 sm:px-6">
 1274 │ │                       <div className="flex items-start gap-3">
 1275 │ │                         <div className="flex-shrink-0 pt-1">
 1276 │ │                           <Checkbox
 1277 │ │                             checked={selectedQuestions.has(question.id)}
 1278 │ │                             onCheckedChange={() => toggleQuestionSelection(question.id)}
 1279 │ │                             className="data-[state=checked]:bg-green-600 data-[state=checked]:border-green-600"
 1280 │ │                           />
 1281 │ │                         </div>
 1282 │ │                         <div className="flex-1">
 1283 │ │                           <h3 className={`font-semibold text-base sm:text-lg mb-2 transition-colors duration-200 ${
 1284 │ │                             selectedQuestions.has(question.id) ? 'text-green-900' : 'text-blue-900'
 1285 │ │                           }`}>
 1286 │ │                             {question.title}
 1287 │ │                           </h3>
 1288 │ │                           <p className="text-sm sm:text-base text-gray-700 mb-3 sm:mb-4 leading-relaxed">{question.content}</p>
 1289 │ │                           <div className="flex items-center flex-wrap gap-2 sm:gap-3">
 1290 │ │                             {question.difficulty && (
 1291 │ │                               <Badge className={`${getDifficultyColor(question.difficulty)} px-2 sm:px-3 py-0.5 sm:py-1 text-xs sm:text-sm rounded-full`}>
 1292 │ │                                 {question.difficulty}
 1293 │ │                               </Badge>
 1294 │ │                             )}
 1295 │ │                             <span className="text-xs sm:text-sm text-gray-500 flex items-center gap-1">
 1296 │ │                               <svg xmlns="http://www.w3.org/2000/svg" className="h-3 w-3 sm:h-4 sm:w-4" viewBox="0 0 20 20" fill="currentColor">
 1297 │ │                                 <path fillRule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clipRule="evenodd" />
 1298 │ │                               </svg>
 1299 │ │                               {new Date(question.created_at).toLocaleDateString('pt-BR')}
 1300 │ │                             </span>
 1301 │ │                             {selectedQuestions.has(question.id) && (
 1302 │ │                               <Badge className="bg-green-100 text-green-700 px-2 py-0.5 text-xs rounded-full">
 1303 │ │                                 ✓ Selecionada
 1304 │ │                               </Badge>
 1305 │ │                             )}
 1306 │ │                           </div>
 1307 │ │                         </div>
 1308 │ │                       </div>
 1309 │ │                     </CardContent>
 1310 │ │                   </Card>
 1311 │ │                 ))}
 1312 │ │               </div>
 1313 │ │               
 1314 │ │               {(loading.questions || loadingTopicQuestions) && (
 1315 │ │                 <div className="flex flex-col items-center justify-center py-12">
 1316 │ │                   <div className="relative mb-4">
 1317 │ │                     {/* Spinner principal */}
 1318 │ │                     <div className="h-16 w-16 rounded-full border-4 border-blue-100 border-t-blue-500 animate-spin shadow-lg"></div>
 1319 │ │                     {/* Spinner interno */}
 1320 │ │                     <div className="absolute top-2 left-2 h-12 w-12 rounded-full border-3 border-green-100 border-t-green-400 animate-spin" style={{animationDirection: 'reverse', animationDuration: '1.5s'}}></div>
 1321 │ │                     {/* Ícone central */}
 1322 │ │                     <FileText className="h-6 w-6 text-blue-600 absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 animate-pulse" />
 1323 │ │                   </div>
 1324 │ │                   <div className="text-center space-y-2">
 1325 │ │                     <span className="text-blue-700 font-semibold text-lg">Carregando questões...</span>
 1326 │ │                     <p className="text-gray-600 text-sm">Aguarde enquanto organizamos o conteúdo para você</p>
 1327 │ │                   </div>
 1328 │ │                   {/* Barra de progresso animada */}
 1329 │ │                   <div className="w-64 h-1 bg-gray-200 rounded-full mt-4 overflow-hidden">
 1330 │ │                     <div className="h-full bg-gradient-to-r from-blue-400 to-green-400 rounded-full animate-pulse" style={{
 1331 │ │                       width: '100%',
 1332 │ │                       animation: 'loading-bar 2s ease-in-out infinite'
 1333 │ │                     }}></div>
 1334 │ │                   </div>
 1335 │ │                 </div>
 1336 │ │               )}
 1337 │ │             </CardContent>
 1338 │ │           </Card>
 1339 │ │         )}
 1340 │ │   
 1341 │ │         {/* Mensagem quando nenhuma questão for encontrada */}
 1342 │ │         {selectedTopic && questions.length === 0 && !loading.questions && (
 1343 │ │           <Card className="border-0 shadow-lg overflow-hidden">
 1344 │ │             <CardContent className="p-8">
 1345 │ │               <div className="text-center py-8 max-w-md mx-auto">
 1346 │ │                 <div className="bg-gray-100 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6 shadow-inner">
 1347 │ │                   <FileText className="h-10 w-10 text-gray-500" />
 1348 │ │                 </div>
 1349 │ │                 <h3 className="text-xl font-semibold text-gray-900 mb-3 bg-clip-text text-transparent bg-gradient-to-r from-blue-700 to-indigo-700">Nenhuma questão encontrada</h3>
 1350 │ │                 <p className="text-gray-600 leading-relaxed">Não há questões disponíveis para o tópico selecionado. Tente selecionar outro tópico ou disciplina.</p>
 1351 │ │                 <Button 
 1352 │ │                   variant="outline" 
 1353 │ │                   onClick={clearFilters}
 1354 │ │                   className="mt-6 bg-gradient-to-r from-blue-50 to-indigo-50 hover:from-blue-100 hover:to-indigo-100 border-blue-200 text-blue-600 hover:text-blue-700 transition-all duration-300 px-6 py-2 rounded-full shadow-sm"
 1355 │ │                 >
 1356 │ │                   <div className="flex items-center space-x-2">
 1357 │ │                     <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-refresh-cw">
 1358 │ │                       <path d="M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8"/>
 1359 │ │                       <path d="M21 3v5h-5"/>
 1360 │ │                       <path d="M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16"/>
 1361 │ │                       <path d="M3 21v-5h5"/>
 1362 │ │                     </svg>
 1363 │ │                     <span>Limpar filtros e tentar novamente</span>
 1364 │ │                   </div>
 1365 │ │                 </Button>
 1366 │ │               </div>
 1367 │ │             </CardContent>
 1368 │ │           </Card>
 1369 │ │         )}
 1370 │ │   
 1371 │ │         {/* Mensagem inicial */}
 1372 │ │         {!selectedDiscipline && disciplines.length > 0 && (
 1373 │ │           <Card className="border-0 shadow-lg overflow-hidden bg-gradient-to-b from-white to-blue-50">
 1374 │ │             <CardContent className="p-8">
 1375 │ │               <div className="text-center py-8 max-w-lg mx-auto">
 1376 │ │                 <div className="bg-gradient-to-r from-blue-500 to-indigo-600 w-24 h-24 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg transform transition-transform hover:scale-105 duration-300">
 1377 │ │                   <BookOpen className="h-12 w-12 text-white" />
 1378 │ │                 </div>
 1379 │ │                 <h3 className="text-2xl font-bold text-gray-900 mb-4 bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-indigo-600">Bem-vindo ao Genomed Bank</h3>
 1380 │ │                 <p className="text-gray-700 leading-relaxed mb-6">Escolha uma disciplina, assunto e tópico nos filtros acima para visualizar as questões disponíveis. Você também pode usar a busca hierárquica para encontrar conteúdos específicos.</p>
 1381 │ │                 <div className="flex flex-wrap justify-center gap-4">
 1382 │ │                   <div className="flex items-center space-x-2 bg-blue-50 p-3 rounded-lg border border-blue-100">
 1383 │ │                     <Filter className="h-5 w-5 text-blue-500" />
 1384 │ │                     <span className="text-blue-700 font-medium">Use os filtros</span>
 1385 │ │                   </div>
 1386 │ │                   <div className="flex items-center space-x-2 bg-indigo-50 p-3 rounded-lg border border-indigo-100">
 1387 │ │                     <Search className="h-5 w-5 text-indigo-500" />
 1388 │ │                     <span className="text-indigo-700 font-medium">Ou faça uma busca</span>
 1389 │ │                   </div>
 1390 │ │                 </div>
 1391 │ │               </div>
 1392 │ │             </CardContent>
 1393 │ │           </Card>
 1394 │ │         )}
 1395 │ │       </div>
 1396 │ ╰─▶   );
 1397 │     }
      ╰────

  × Expression expected
      ╭─[C:\Users\u-zan\Downloads\APLICATIVOS\medjourney\medjourney-app\src\app\genomed-bank\page.tsx:1394:1]
 1394 │       )}
 1395 │     </div>
 1396 │   );
 1397 │ }
      · ─
      ╰────

Caused by:
    Syntax Error